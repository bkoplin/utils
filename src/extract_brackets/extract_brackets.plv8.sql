DROP FUNCTION IF EXISTS extract_brackets(input text);
CREATE OR REPLACE FUNCTION extract_brackets(input text) RETURNS TEXT[] AS $plv8ify$
"use strict";var fn=(()=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,extract_brackets_exports={};function balanced(a,b,str){a instanceof RegExp&&(a=maybeMatch(a,str)),b instanceof RegExp&&(b=maybeMatch(b,str));const r=function(a,b,str){let begs,beg,left,right,result,ai=str.indexOf(a),bi=str.indexOf(b,ai+1),i=ai;if(ai>=0&&bi>0){if(a===b)return[ai,bi];for(begs=[],left=str.length;i>=0&&!result;)i===ai?(begs.push(i),ai=str.indexOf(a,i+1)):1===begs.length?result=[begs.pop(),bi]:(beg=begs.pop(),beg<left&&(left=beg,right=bi),bi=str.indexOf(b,i+1)),i=ai<bi&&ai>=0?ai:bi;begs.length&&(result=[left,right])}return result}(a,b,str);return r&&{start:r[0],end:r[1],pre:str.slice(0,r[0]),body:str.slice(r[0]+a.length,r[1]),post:str.slice(r[1]+b.length)}}function maybeMatch(reg,str){const m=str.match(reg);return m?m[0]:null}function getBracketBodies(input,matches=[]){const firstMatch=balanced("[","]",input)??balanced("{","}",input)??balanced("(",")",input);return void 0!==firstMatch&&matches.push(firstMatch),void 0===firstMatch?matches:getBracketBodies(firstMatch.post,matches)}function extract_brackets(input){return getBracketBodies(input).map((match=>match.body))}return((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(extract_brackets_exports,{extract_brackets:()=>extract_brackets}),mod=extract_brackets_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod)})();for(const key in fn)globalThis[key]=fn[key];
return extract_brackets(input)

$plv8ify$ LANGUAGE plv8 IMMUTABLE STRICT;