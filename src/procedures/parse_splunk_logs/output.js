"use strict";var fn=function(){var t,e=function(t){plv8.elog(INFO,"Starting procedure to process splunk logs from ".concat(t,", ").concat((new Date).toISOString()));var e="".concat(t,"_temp");plv8.execute("CREATE TABLE ".concat(e," AS (\n      SELECT EXTRACT_KEYVALS(_raw) log_object, * FROM ").concat(plv8.quote_ident(t),"\n    );")),plv8.execute("CREATE INDEX ON ".concat(e," (log_object); CREATE INDEX ON ").concat(e," (_raw);")),plv8.elog(INFO,"Created table ".concat(e," for parsing, ").concat((new Date).toISOString()));var l=plv8.execute("SELECT DISTINCT log_object ->> 'serial_number' serial_number FROM ".concat(e," WHERE log_object ->> 'serial_number' IS NOT NULL ORDER BY 1")).map((function(t){return t.serial_number})).filter((function(t){return"string"==typeof t&&t.length>0}));plv8.elog(INFO,"Extracting log values from ".concat(e," for serial numbers ").concat(JSON.stringify(l)));var i=plv8.prepare("SELECT (log_object ->> 'log_time') ::TIMESTAMP first_connection_time FROM ".concat(plv8.quote_ident(e)," WHERE log_object @@ '$.connection_reason == \"FIRST_CONNECTION\"' AND (log_object ->> 'serial_number') = $1"),["text"]),_=plv8.prepare("SELECT (log_object ->> 'patch_activation_time') ::TIMESTAMP patch_activation_time FROM ".concat(plv8.quote_ident(e)," WHERE log_object @@ '$.patch_activation_time != null' AND (log_object ->> 'serial_number') = $1"),["text"]);return l.forEach((function(l){("string"==typeof l||l.length>0)&&(i.execute([l]).forEach((function(i){_.execute([l]).forEach((function(_){var u=i.first_connection_time,p=_.patch_activation_time;plv8.elog(INFO,"Parsing Records associated with serial_number: ".concat(l," and first_connection_time: ").concat(u," and patch_activation_time: ").concat(p));var E=plv8.quote_nullable(u.toISOString()),v=plv8.quote_nullable(p.toISOString()),S=plv8.quote_nullable(t);n(E,v,S,e,l),c(E,v,S,e,l),o(E,v,S,e,l),a(E,v,S,e,l),s(E,v,S,e,l),r(E,v,S,e,l)})),_.free()})),i.free())})),plv8.execute("DROP TABLE IF EXISTS ".concat(e,";")),plv8.elog(INFO,"Dropped temp table ".concat(e,", ").concat((new Date).toISOString())),null},n=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::event_analysis_request, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  s._raw ~ 'Created analysis request'\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_event_analysis_requests, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_event_analysis_requests AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_event_analysis_requests failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_event_analysis_requests, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_event_analysis_requests ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_event_analysis_requests sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_event_analysis_requests failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},c=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::event_patch_command, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  s.log_object @@ '$.analysis_request_id != null'\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_patch_commands, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_patch_commands AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_patch_commands failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_patch_commands, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_patch_commands ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_patch_commands sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_patch_commands failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},o=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::event_classifier_response, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  s._raw ~ '(EventDataMessageHandler.+received event)'\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_classifier_responses, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_classifier_responses AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_classifier_responses failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_classifier_responses, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_classifier_responses ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_classifier_responses sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_classifier_responses failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},a=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::event_classifier_receipt, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  s._raw ~ '(RoutingServiceProvider - event=\"transmission.received\")'\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_classifier_receipts, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_classifier_receipts AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_classifier_receipts failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_classifier_receipts, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_classifier_receipts ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_classifier_receipts sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_classifier_receipts failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},s=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::event_action, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  (\n    s._raw ~ 'TransmissionFilter - event=\"transmission.filtered\"'\n    OR\n    s._raw ~ 'EcgDlResultsProcessor - event=\"transmission.algorithm_processing_completed\"'\n  )\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_event_actions, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_event_actions AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_event_actions failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_event_actions, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_event_actions ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_event_actions sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_event_actions failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},r=function(t,e,n,c,o){var a="\nSELECT\n  s.sourcetype\n  , (JSONB_POPULATE_RECORD(NULL::skyrunner_review_output, s.log_object)).*\n  , s._raw\n  , s.log_object\n  , ".concat(t," ::TIMESTAMP first_connection_time\n  , ").concat(e," ::TIMESTAMP patch_activation_time\n  , ").concat(n," source_table\nFROM ").concat(c," s\nWHERE\n  s.sourcetype = 'skyrunner_ws'\n  AND \n  (s.log_object ->> 'serial_number') = ").concat(plv8.quote_literal(o),"\n        ");try{plv8.subtransaction((function(){plv8.elog(INFO,"Creating table splunk_review_outputs, ".concat((new Date).toISOString())),plv8.execute("CREATE TABLE splunk_review_outputs AS (".concat(a,");"))}))}catch(t){plv8.elog(INFO,"CREATE TABLE splunk_review_outputs failed, error message: ".concat(t,", ").concat((new Date).toISOString())),plv8.elog(INFO,"Inserting records into splunk_review_outputs, ".concat((new Date).toISOString()));try{plv8.subtransaction((function(){return plv8.execute("INSERT INTO splunk_review_outputs ".concat(a," AND NOT EXISTS(SELECT 1 FROM splunk_review_outputs sub WHERE sub._raw = s._raw);"))}))}catch(t){plv8.elog(INFO,"INSERT INTO TABLE splunk_review_outputs failed, error message: ".concat(t,", ").concat((new Date).toISOString()))}}},l=Object.defineProperty,i=Object.getOwnPropertyDescriptor,_=Object.getOwnPropertyNames,u=Object.prototype.hasOwnProperty,p={};return function(t,e){for(var n in e)l(t,n,{get:e[n],enumerable:!0})}(p,{parse_splunk_logs:function(){return e}}),t=p,function(t,e,n,c){if(e&&"object"==typeof e||"function"==typeof e){var o=!0,a=!1,s=void 0;try{for(var r,p=function(){var o=r.value;u.call(t,o)||o===n||l(t,o,{get:function(){return e[o]},enumerable:!(c=i(e,o))||c.enumerable})},E=_(e)[Symbol.iterator]();!(o=(r=E.next()).done);o=!0)p()}catch(t){a=!0,s=t}finally{try{o||null==E.return||E.return()}finally{if(a)throw s}}}return t}(l({},"__esModule",{value:!0}),t)}();