var l=/^(\(.*\)|\\?.)$/,n=e=>{let s=e.toString();return l.test(s)?s:`(?:${s})`},d=/^(?:\(\?:(.+)\)|(\(?.+\)?))$/,g=/^(?:\(\?:(.+)\)([?+*]|{[\d,]+})?|(.+))$/,a=e=>{let s=t=>a(`(?<${t}>${`${e}`.replace(d,"$1$2")})`);return{toString:()=>e.toString(),and:Object.assign((...t)=>a(`${e}${o(...t)}`),{referenceTo:t=>a(`${e}\\k<${t}>`)}),or:(...t)=>a(`(?:${e}|${o(...t)})`),after:(...t)=>a(`(?<=${o(...t)})${e}`),before:(...t)=>a(`${e}(?=${o(...t)})`),notAfter:(...t)=>a(`(?<!${o(...t)})${e}`),notBefore:(...t)=>a(`${e}(?!${o(...t)})`),times:Object.assign(t=>a(`${n(e)}{${t}}`),{any:()=>a(`${n(e)}*`),atLeast:t=>a(`${n(e)}{${t},}`),atMost:t=>a(`${n(e)}{0,${t}}`),between:(t,i)=>a(`${n(e)}{${t},${i}}`)}),optionally:()=>a(`${n(e)}?`),as:s,groupedAs:s,grouped:()=>a(`${e}`.replace(g,"($1$3)$2")),at:{lineStart:()=>a(`^${e}`),lineEnd:()=>a(`${e}$`)}}},p=/[.*+?^${}()|[\]\\/]/g;var w=a("."),h=a("\\b\\w+\\b"),y=a("\\w"),b=a("\\b"),f=a("\\d"),A=a("\\s"),m=Object.assign(a("[a-zA-Z]"),{lowercase:a("[a-z]"),uppercase:a("[A-Z]")}),u=a("\\t"),E=a("\\n"),R=a("\\r"),x={word:a("\\W+"),wordChar:a("\\W"),wordBoundary:a("\\B"),digit:a("\\D"),whitespace:a("\\S"),letter:Object.assign(a("[^a-zA-Z]"),{lowercase:a("[^a-z]"),uppercase:a("[^A-Z]")}),tab:a("[^\\t]"),linefeed:a("[^\\n]"),carriageReturn:a("[^\\r]")},r=(...e)=>a(`${n(o(...e))}?`),o=(...e)=>a(e.map(s=>typeof s=="string"?s.replace(p,"\\$&"):s).join(""));var c="g";var $=(...e)=>{let s=e.length>1&&(Array.isArray(e[e.length-1])||e[e.length-1]instanceof Set)?e.pop():void 0;return new RegExp(o(...e).toString(),[...s||""].join(""))};function D(e){let s=$(r('"'),o("="),r('"'),[c]),t=e.matchAll(s);return Array.from(t)}export{D as extract_keyvals};
